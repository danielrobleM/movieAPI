//
//  HomeWorker.swift
//  themoviedb
//
//  Created by Daniel Roble on 3/5/19.
//  Copyright (c) 2019 Daniel Roble. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

protocol HomeStoreProtocol {
    func fetchMovie(order: orderBy, completionHandler: @escaping (_ orders: [MovieModel]) -> Void)
}

class HomeWorker {
    let store: HomeStoreProtocol
    init(homeStore: HomeStoreProtocol) {
        store = homeStore
    }

    func fetchMovie(order: orderBy, completionHandler: @escaping (_ orders: [MovieModel]) -> Void) {
        store.fetchMovie(order: order, completionHandler: completionHandler)
    }
}

class homeStore: HomeStoreProtocol {
    func fetchMovie(order: orderBy, completionHandler: @escaping  ([MovieModel]) -> Void) {
        AF.request(order.stringUrl).responseJSON { response in
            switch response.result {
            case .success:
                if let data = response.data {
                    do {
                        let response = try  JSONDecoder().decode(ResponseMovieDB.self, from: data)
                        completionHandler(response.results)
                    } catch let jsonError {
                        print(jsonError.localizedDescription)
                        completionHandler([])
                    }
                } else {
                    completionHandler([])
                }
            case .failure(let error):
                print(error.localizedDescription)
                completionHandler([])
            }
        }
    }
}
